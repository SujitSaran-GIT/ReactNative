Components
---------------
Components are independent * reuseable bits of code. They serve the same purpose as JS functions but work in isolation and return HTML

JSX
------------
JSX allows us to write HTML in React Native. JSX makes it easier to write & add HTML in React

Expression In JSX
---------------------
With JSX you can write expression inside curly braces. The expressions can be a variable, or property, or any other valid Javascript expression. JSX will execute the expression and return the result

FlatList
------------
FlatList will iterate all over the data and render the list of the data

Props
-----------------
Props / Properties are arguments passed into Components
Props are passed to components via HTML attributes

Conditional Rendering 
-------------------------
Conditional Rendering in React Native works the same way as conditional works in JavaScript. You can use JavaScrpt operators like if & or Ternary to represent the current state and let React Native update the UI to match them

state
----------
State is abuilt in React obejct that is used to contain data or information about the component. A component's state can change over time, whenever it changes, the component re-renders

Hooks
---------------
Hooks are a new addition in react 16.8. They let you use state and other React features without writing a class.

useState() Hooks
----------------
sueState() hook allows us to track state in a functional component. State generally refers to data or properties that need to be tracking in an application

useEffect() Hooks
--------------------
useEffect() hook allows you to perform side effects in your components. Some examples of side effects are : Fetching data, directly updating the dom

useReducer() Hooks
---------------------
useReducer is a hook that is similar to useState, but it is designed for more complex state objects or state transitions that involves multiple sub-values. It allows you to manage state in a functional, Immutable way.

